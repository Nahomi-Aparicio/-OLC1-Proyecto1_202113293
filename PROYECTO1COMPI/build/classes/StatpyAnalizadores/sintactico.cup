// ------------  Paquete e importaciones ------------
package StatpyAnalizadores;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public String resultado = ""; 

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaración de terminales
terminal String ENTERO,PARENTESIS_A,PARENTESIS_C,LLAVE_A,LLAVE_C,PUNTO_COMA,DOSP,COMA,CORCHETE_A,
CORCHETE_C,DOLAR,IGUAL,MAS,MENOS,POR,DIV,MAYOR,MENOR,M_IGUAL,ENOR_IGUAL,
IGUALIGUAL,DIFERENTE,AND,OR,NOT,VOID,INT,DOUBLE,CHAR,BOOL,STRING,MAIN,IF,
ELSE,SWITCH,BREAK,FOR,WHILE,CONSOL,DEFAULT,CASE,DO,VAR, 
ID,CADENA;


//------> Declaración de no terminales

non terminal inicio,lista_Inst,instruccion,declaracionVar,dato,Expresion,
 aritmeico,operacion,numero;


//------> PRECEDENCIA
precedence left MAS,MENOS,POR,DIV;



//------> Definir Simbolo Inicial
start with inicio; 


inicio ::=  VOID MAIN  PARENTESIS_A PARENTESIS_C LLAVE_A lista_Inst  LLAVE_C
        ;

lista_Inst::=lista_Inst instruccion
            |instruccion
        ;
instruccion::= declaracionVar 
        ;

declaracionVar::=dato ID IGUAL Expresion  PUNTO_COMA
            |dato ID PUNTO_COMA
        ;
dato::=INT
    |DOUBLE
    |CHAR
    |BOOL
    |STRING
    |VAR
        ;

Expresion::= aritmeico
            |ID
            |STRING
           
;

aritmeico::= aritmeico operacion
    |operacion
    ;

operacion::=operacion MENOS operacion
        |operacion POR operacion
        |operacion DIV operacion
        |operacion MAS operacion
        |numero
    ;

numero ::=ENTERO
        
;
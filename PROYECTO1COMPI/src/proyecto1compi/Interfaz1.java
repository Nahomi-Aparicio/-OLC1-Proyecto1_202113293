/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1compi;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author genes
 */
public class Interfaz1 extends javax.swing.JFrame {
private File ArchivoAbierto;
public File guardarcomo;

public static boolean EsJSon =false;
public static boolean EsStay =false;
    /**
     * Creates new form Interfaz
     */
    public Interfaz1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Reporte = new javax.swing.JButton();
        Ejecutar = new javax.swing.JButton();
        Analizadoresbotn = new javax.swing.JComboBox<>();
        Abrir = new javax.swing.JButton();
        guardarCo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Entrada = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Salida = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        Reporte.setBackground(new java.awt.Color(255, 204, 204));
        Reporte.setForeground(new java.awt.Color(255, 153, 51));
        Reporte.setText("Reporte");
        Reporte.setBorder(null);
        Reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteActionPerformed(evt);
            }
        });

        Ejecutar.setBackground(new java.awt.Color(255, 204, 204));
        Ejecutar.setForeground(new java.awt.Color(255, 153, 51));
        Ejecutar.setText("Ejecutar");
        Ejecutar.setBorder(null);
        Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EjecutarActionPerformed(evt);
            }
        });

        Analizadoresbotn.setBackground(new java.awt.Color(255, 204, 204));
        Analizadoresbotn.setForeground(new java.awt.Color(255, 153, 51));
        Analizadoresbotn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Analizador JSON", "Analizador StatPy" }));
        Analizadoresbotn.setBorder(null);
        Analizadoresbotn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalizadoresbotnActionPerformed(evt);
            }
        });

        Abrir.setBackground(new java.awt.Color(255, 204, 204));
        Abrir.setForeground(new java.awt.Color(255, 153, 51));
        Abrir.setText("Abrir");
        Abrir.setBorder(null);
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });

        guardarCo.setBackground(new java.awt.Color(255, 204, 204));
        guardarCo.setForeground(new java.awt.Color(255, 153, 51));
        guardarCo.setText("Guardar Como");
        guardarCo.setBorder(null);
        guardarCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarCoActionPerformed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(255, 204, 204));
        guardar.setForeground(new java.awt.Color(255, 153, 51));
        guardar.setText("Guardar");
        guardar.setBorder(null);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarCo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Analizadoresbotn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Analizadoresbotn, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
            .addComponent(guardarCo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Ejecutar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Reporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Analizador");

        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Entrada:");

        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Salida");

        Entrada.setBackground(new java.awt.Color(204, 255, 255));
        Entrada.setColumns(20);
        Entrada.setRows(5);
        Entrada.setBorder(null);
        jScrollPane1.setViewportView(Entrada);

        Salida.setBackground(new java.awt.Color(204, 255, 255));
        Salida.setColumns(20);
        Salida.setRows(5);
        jScrollPane2.setViewportView(Salida);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteActionPerformed
    }//GEN-LAST:event_ReporteActionPerformed

    private void AnalizadoresbotnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalizadoresbotnActionPerformed
        
    }//GEN-LAST:event_AnalizadoresbotnActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
         JFileChooser fileChooser = new JFileChooser();
       int seleccion = fileChooser.showSaveDialog(Entrada);
       if (seleccion == JFileChooser.APPROVE_OPTION){
           String contenidoArchivo= "";   
            ArchivoAbierto= fileChooser.getSelectedFile();
           try {
               Scanner input = new Scanner(ArchivoAbierto);
               while (input.hasNextLine()){
                   contenidoArchivo += input.nextLine()+"\n";
               }
               input.close();
           }catch (Exception ex){
               ex.printStackTrace();
           }
           Entrada.setText(contenidoArchivo);
       }   
     
        
    }//GEN-LAST:event_AbrirActionPerformed

    private void guardarCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarCoActionPerformed
   
        JFileChooser NuevoGuardar = new JFileChooser();

        FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Archivos JSON (*.json)", "json");
        FileNameExtensionFilter docFilter = new FileNameExtensionFilter("Archivos StatPy (*.sp)", "sp");

        NuevoGuardar.addChoosableFileFilter(txtFilter);
        NuevoGuardar.addChoosableFileFilter(docFilter);
        
        
        
        int result = NuevoGuardar.showOpenDialog(Entrada);

        if (result == JFileChooser.APPROVE_OPTION) {
           ArchivoAbierto =NuevoGuardar.getSelectedFile();

            // Obtener el filtro seleccionado por el índice
            int selectedFilterIndex = NuevoGuardar.getFileFilter().equals(txtFilter) ? 0 : 1;

            if (selectedFilterIndex == 0) {
                System.out.println("Usuario seleccionó un archivo JSON");               
                
                if (!ArchivoAbierto.getAbsolutePath().endsWith(".json")) {
                    ArchivoAbierto = new File(ArchivoAbierto.getAbsolutePath() + ".json");
                }
                try {
                    // Crea un FileWriter para escribir en el archivo seleccionado
                    FileWriter writer = new FileWriter(ArchivoAbierto);

                    // Escribe el contenido del componente de GUI "Editor" en el archivo
                    writer.write(Entrada.getText());

                    // Cierra el FileWriter para finalizar la escritura en el archivo
                    writer.close();

                    // Actualiza el componente de GUI "consola" para mostrar un mensaje de éxito
                    JOptionPane.showMessageDialog(null,"El archivo se guardó con éxito el archivo json");

                } catch (Exception ex) {
                    // Si ocurre una excepción durante la escritura, imprime la traza de la excepción para depuración
                    ex.printStackTrace();
                }
                
            } else if (selectedFilterIndex == 1) {
                System.out.println("Usuario seleccionó un archivo sp");
                
                if (!ArchivoAbierto.getAbsolutePath().endsWith(".sp")) {
                    ArchivoAbierto = new File(ArchivoAbierto.getAbsolutePath() + ".sp");
                }
                try {
                    // Crea un FileWriter para escribir en el archivo seleccionado
                    FileWriter writer = new FileWriter(ArchivoAbierto);

                    // Escribe el contenido del componente de GUI "Editor" en el archivo
                    writer.write(Entrada.getText());

                    // Cierra el FileWriter para finalizar la escritura en el archivo
                    writer.close();

                    // Actualiza el componente de GUI "consola" para mostrar un mensaje de éxito
                    JOptionPane.showMessageDialog(null,"El archivo se guardó con éxito el archivo sp");

                } catch (Exception ex) {
                    // Si ocurre una excepción durante la escritura, imprime la traza de la excepción para depuración
                    ex.printStackTrace();
                }
                
            }
        } else if (result == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(null,"Usuario canceló la selección.");
        }
    
    


 
    }//GEN-LAST:event_guardarCoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        
           
             File file = ArchivoAbierto; // tomo el archivo que acabo de abrir
             String text = Entrada.getText(); // tomo lo que acabo de escribir en el editor de texto 
 
            try (PrintWriter nuevocontenido = new PrintWriter(file,StandardCharsets.UTF_8)){ // Se crea un nuevo PrintWriter llamado 'out' para escribir en el archivo.
                // 'file' es el archivo en el que se va a escribir.
                // Se utiliza la codificación UTF-8 para asegurar el manejo correcto de caracteres especiales.
                        nuevocontenido.print (text);
                        JOptionPane.showMessageDialog(null,"El archivo se escribio correctamente ");

            }
            catch (IOException e) {
                e.printStackTrace();
            }
            
            
        
       
    }//GEN-LAST:event_guardarActionPerformed

    private void EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EjecutarActionPerformed
    String seleccionAnalisis =   Analizadoresbotn.getSelectedItem()  .toString();
    
    if (seleccionAnalisis=="Analizador JSON"){
        System.out.println("Aqui va lo de el analizador JSon");
        //analizadoresJson("src/JsonAnalizadores/", "Jlexico.jflex", "Jsintactico.cup");
          String Texto_enlaentrada = Entrada.getText();
          analizarJson(Texto_enlaentrada);
          
    }else if (seleccionAnalisis=="Analizador StatPy"){
        System.out.println("Aqui va lo statpy");
         //analizadoresStay("src/StatpyAnalizadores/", "lexico.jflex", "sintactico.cup");
          String Texto_enlaentrada = Entrada.getText();
          analizarStay(Texto_enlaentrada);
                
        
    }
        
    //funciones.funcion.mostrar("holi");      
      //ESTO ES PARA LA TABLA DE TOKENS AUN FALTA PERO ESTA CASI EL COMO HACERLO 
     /* funciones.funcion.ListaT.forEach((elemento)->{      
        System.out.println(elemento);
        System.out.println(funciones.funcion.ListaT);
    });*/
      
    }//GEN-LAST:event_EjecutarActionPerformed

    public static void analizarStay (String entrada){
        try {
            StatpyAnalizadores.Lexer lexer = new StatpyAnalizadores.Lexer(new StringReader(entrada)); 
            StatpyAnalizadores.Parser parser = new StatpyAnalizadores.Parser(lexer);
            parser.parse();
        } catch (Exception e) {
            System.out.println("Error fatal en compilación de entrada.");
            System.out.println(e);
        } 
    } 
    
    
    public static void analizadoresStay(String ruta, String jflexFile, String cupFile){
        try {
            String opcionesJflex[] =  {ruta+jflexFile,"-d",ruta};
            jflex.Main.generate(opcionesJflex);

            String opcionesCup[] =  {"-destdir", ruta,"-parser","Parser",ruta+cupFile};
            java_cup.Main.main(opcionesCup);
            
        } catch (Exception e) {
            System.out.println("No se ha podido generar los analizadores");
            System.out.println(e);
        }
    } 
    
     public static void analizarJson (String entrada){
        try {
            JsonAnalizadores.Lexer lexer = new JsonAnalizadores.Lexer(new StringReader(entrada)); 
            JsonAnalizadores.Parser parser = new JsonAnalizadores.Parser(lexer);
            parser.parse();
        } catch (Exception e) {
            System.out.println("Error fatal en compilación de entrada.");
            System.out.println(e);
        } 
    } 
    
     public static void analizadoresJson(String ruta, String jflexFile, String cupFile){
        try {
            String opcionesJflex[] =  {ruta+jflexFile,"-d",ruta};
            jflex.Main.generate(opcionesJflex);

            String opcionesCup[] =  {"-destdir", ruta,"-parser","Parser",ruta+cupFile};
            java_cup.Main.main(opcionesCup);
            
        } catch (Exception e) {
            System.out.println("No se ha podido generar los analizadores");
            System.out.println(e);
        }
    }
    
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir;
    private javax.swing.JComboBox<String> Analizadoresbotn;
    private javax.swing.JButton Ejecutar;
    private javax.swing.JTextArea Entrada;
    private javax.swing.JButton Reporte;
    private javax.swing.JTextArea Salida;
    private javax.swing.JButton guardar;
    private javax.swing.JButton guardarCo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
